#+title: gitit,pandoc

* gitit
** install 
cabal --prefix
cabal --global 
  
cabal install pandoc 
cabal install pandoc -fhighlighting --reinstall


cabal --global install --reinstall -fhighlighting pandoc
cabal --global install --reinstall gitit

cabal install gitit

这里发生冲突,　手动下载编译

cabal get gitit
cabal configure
cabal build
cabal install --global
** cabal config
#+BEGIN_EXAMPLE

install-dirs global
  prefix: /app/cabal
  bindir: $prefix/bin
  libdir: $prefix/lib
  libsubdir: $abi/$pkgkey
  libexecdir: $prefix/libexec
  datadir: $prefix/share
  datasubdir: $abi/$pkgid
  docdir: $datadir/doc/$abi/$pkgid
  htmldir: $docdir/html
  haddockdir: $htmldir
  sysconfdir: $prefix/etc


#+END_EXAMPLE

** systemd
We think that there should be two service files, one named gitit.service:

useradd -m -U gitit

#+BEGIN_EXAMPLE
[Unit]
Description=Gitit wiki
After=network.target

[Service]
ExecStart=/app/cabal/bin/gitit -f /home/gitit/config
WorkingDirectory=/home/gitit/default
User=gitit
Group=gitit
#Restart=on-failure

[Install]
WantedBy=multi-user.target

#+END_EXAMPLE

and the other named gitit@.service:

#+BEGIN_EXAMPLE

[Unit]
Description=Gitit wiki
After=network.target

[Service]
ExecStart=/usr/bin/gitit -f /etc/gitit/%I.conf
WorkingDirectory=/srv/gitit/%I
User=gitit
Group=gitit
#Restart=on-failure

[Install]
WantedBy=multi-user.target

#+END_EXAMPLE

with gitit user and group being created upon installation and %I being the unescaped instance name. User can enable mutliple instances by running e.g. systemctl start gitit@public.service. Depending on the configuration it could run on port 80 (the executable /usr/bin/gitit should be granted the capability CAP_NET_BIND_SERVICE), or proxied behind a web server. The use of the directory /srv/gitit as home of gitit data is still being debated.



注意:
　要用运行账户gitit手动在工作目录下,运行一次,　/app/cabal/bin/gitit -f /home/gitit/config.
  否则　用systemctl 第一次会失败.


** 图片
[link label](/Computer.svg)

** 图片大小
   

你可以直接使用html

比如

<img src="drawing.jpg" alt="Drawing" width="200px" />

或者

![drawing](drawing.jpg)

然后编写CSS文件:

img[alt=drawing] { width: 200px; }

链接

回答 10月 21 '13
delight 图像
delight
365

更新于 8月 1 '14
添加评论
1

@delight 的方法比较通用，官方的markdown确实不支持图片大小的调整。然后，有一些markdown的实现，有这个功能，你可以试一下：

在文件URL之后加上“ =WIDTHxHEIGHT”，看清楚了，“=”号之前有个空格。

示例：

![](./pic/pic1_50.png =100x20)

也可以不写高度，如下：

![](./pic/pic1s.png =250x)

注意： 现在，并不是所有markdown支持这个语法，仅供参考。
** plantuml
http://edwtjo.me/posts/2016-11-04-plant-based-uml-wiki/




* 文字加顔色
使用span + css, 原有的<font>标签已经不再推荐使用

#+BEGIN_SRC 
  <span style="color:red; font-size:large"> 
  **最终结论: 成本高没有优势，仍采用以前的ＡＴＡ＋模拟电话方案**
  <span>
#+END_SRC

* 对比 docsify
   markdown
https://docsify.js.org/#/
* 在网页浏览器中原生显示PDF文件

<html>
    <body>
         <embed width="100%" height="100%" name="plugin" src="xx.pdf" type="application/pdf" />
    </body>
</html>


<object data="1.pdf" type="application/pdf"
           width="800"
           height="1050">
      <a href='http://get.adobe.com/cn/reader'>Adobe Reader.pdf </a> 
</object> 



<html>
  <body>
    <centre>
         <object data="BB_00001.PDF" type="application/pdf"
           width="500"
           >
      <a href='http://get.adobe.com/cn/reader'>Adobe Reader.pdf </a> 
         </object>
         <centre>
    </body>
</html>
<object data="BB_00054.PDF" type="application/pdf" width="500"/>
<embed width="100%" height="100%" name="plugin" src="BB_00054.pdf" type="application/pdf" />
