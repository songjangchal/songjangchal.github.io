#+title: gitit,pandoc

* gitit
** install 
cabal --prefix
cabal --global 
  
cabal install pandoc 
cabal install pandoc -fhighlighting --reinstall


cabal --global install --reinstall -fhighlighting pandoc
cabal --global install --reinstall gitit

cabal install gitit

这里发生冲突,　手动下载编译

cabal get gitit
cabal configure
cabal build
cabal install --global
** cabal config
#+BEGIN_EXAMPLE

install-dirs global
  prefix: /app/cabal
  bindir: $prefix/bin
  libdir: $prefix/lib
  libsubdir: $abi/$pkgkey
  libexecdir: $prefix/libexec
  datadir: $prefix/share
  datasubdir: $abi/$pkgid
  docdir: $datadir/doc/$abi/$pkgid
  htmldir: $docdir/html
  haddockdir: $htmldir
  sysconfdir: $prefix/etc


#+END_EXAMPLE

** systemd
We think that there should be two service files, one named gitit.service:

useradd -m -U gitit

#+BEGIN_EXAMPLE
[Unit]
Description=Gitit wiki
After=network.target

[Service]
ExecStart=/app/cabal/bin/gitit -f /home/gitit/config
WorkingDirectory=/home/gitit/default
User=gitit
Group=gitit
#Restart=on-failure

[Install]
WantedBy=multi-user.target

#+END_EXAMPLE

and the other named gitit@.service:

#+BEGIN_EXAMPLE

[Unit]
Description=Gitit wiki
After=network.target

[Service]
ExecStart=/usr/bin/gitit -f /etc/gitit/%I.conf
WorkingDirectory=/srv/gitit/%I
User=gitit
Group=gitit
#Restart=on-failure

[Install]
WantedBy=multi-user.target

#+END_EXAMPLE

with gitit user and group being created upon installation and %I being the unescaped instance name. User can enable mutliple instances by running e.g. systemctl start gitit@public.service. Depending on the configuration it could run on port 80 (the executable /usr/bin/gitit should be granted the capability CAP_NET_BIND_SERVICE), or proxied behind a web server. The use of the directory /srv/gitit as home of gitit data is still being debated.



注意:
　要用运行账户gitit手动在工作目录下,运行一次,　/app/cabal/bin/gitit -f /home/gitit/config.
  否则　用systemctl 第一次会失败.


** 图片
[link label](/Computer.svg)

** 图片大小
   

你可以直接使用html

比如

<img src="drawing.jpg" alt="Drawing" width="200px" />

或者

![drawing](drawing.jpg)

然后编写CSS文件:

img[alt=drawing] { width: 200px; }

链接

回答 10月 21 '13
delight 图像
delight
365

更新于 8月 1 '14
添加评论
1

@delight 的方法比较通用，官方的markdown确实不支持图片大小的调整。然后，有一些markdown的实现，有这个功能，你可以试一下：

在文件URL之后加上“ =WIDTHxHEIGHT”，看清楚了，“=”号之前有个空格。

示例：

![](./pic/pic1_50.png =100x20)

也可以不写高度，如下：

![](./pic/pic1s.png =250x)

注意： 现在，并不是所有markdown支持这个语法，仅供参考。
** plantuml
http://edwtjo.me/posts/2016-11-04-plant-based-uml-wiki/




* 文字加顔色
使用span + css, 原有的<font>标签已经不再推荐使用

#+BEGIN_SRC 
  <span style="color:red; font-size:large"> 
  **最终结论: 成本高没有优势，仍采用以前的ＡＴＡ＋模拟电话方案**
  <span>
#+END_SRC

* 对比 docsify
   markdown
https://docsify.js.org/#/
* 在网页浏览器中原生显示PDF文件

<html>
    <body>
         <embed width="100%" height="100%" name="plugin" src="xx.pdf" type="application/pdf" />
    </body>
</html>


<object data="1.pdf" type="application/pdf"
           width="800"
           height="1050">
      <a href='http://get.adobe.com/cn/reader'>Adobe Reader.pdf </a> 
</object> 



<html>
  <body>
    <centre>
         <object data="BB_00001.PDF" type="application/pdf"
           width="500"
           >
      <a href='http://get.adobe.com/cn/reader'>Adobe Reader.pdf </a> 
         </object>
         <centre>
    </body>
</html>
<object data="BB_00054.PDF" type="application/pdf" width="500"/>
<embed width="100%" height="100%" name="plugin" src="BB_00054.pdf" type="application/pdf" />
* 编译 过程

** stack install

#+begin_example
Preprocessing executable 'gitit' for gitit-0.13.0.0..
Building executable 'gitit' for gitit-0.13.0.0..
[1 of 2] Compiling Paths_gitit
[2 of 2] Compiling Main
Linking .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/gitit/gitit ...
Preprocessing executable 'expireGititCache' for gitit-0.13.0.0..
Building executable 'expireGititCache' for gitit-0.13.0.0..

gitit> copy/register
Installing library in /home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/lib/x86_64-linux-ghc-8.6.5/gitit-0.13.0.0-7vtNDv5NqC5K1x0j2ooOLL
Installing executable gitit in /home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/bin
Installing executable expireGititCache in /home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/bin
Registering library for gitit-0.13.0.0..
Copying from /home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/bin/expireGititCache to /home/songzc/.local/bin/expireGititCache
Copying from /home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/bin/gitit to /home/songzc/.local/bin/gitit

Copied executables to /home/songzc/.local/bin:
- expireGititCache
- gitit
#+end_example

  - library已经安装了， 怎样才能使用
  - library和package的区别 

#+begin_example
stack exec -- ghc-pkg list
#+end_example

find . -name '*.a' 查出来的.a文件为什么在上面里没有列出来
* stack 

 stack exec ghc-pkg list 


cd open_source/gitit

stack exec --cwd /home/songzc/gitit Gitit -- -f config



** stack exec env

COLORFGBG=default;default
COLORTERM=rxvt
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
DISPLAY=:0.0
GHC_ENVIRONMENT=-
GHC_PACKAGE_PATH=/home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/pkgdb:/home/songzc/.stack/snapshots/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/pkgdb:/home/songzc/.stack/programs/x86_64-linux/ghc-tinfo6-8.6.5/lib/ghc-8.6.5/package.conf.d
GTK_MODULES=canberra-gtk-module
HASKELL_DIST_DIR=/home/songzc/open_source/gitit/.stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1
HASKELL_PACKAGE_SANDBOX=/home/songzc/.stack/snapshots/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/pkgdb
HASKELL_PACKAGE_SANDBOXES=/home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/pkgdb:/home/songzc/.stack/snapshots/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/pkgdb:
HOME=/home/songzc
LANG=en_US.UTF-8
LC_CTYPE=en_US.UTF-8
LESS=-R
LOGNAME=songzc
LSCOLORS=Gxfxcxdxbxegedabagacad
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
MAIL=/var/mail/songzc
MOZ_PLUGIN_PATH=/usr/lib/mozilla/plugins
OLDPWD=/home/songzc
PAGER=less
PATH=/home/songzc/open_source/gitit/.stack-work/install/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/bin:/home/songzc/.stack/snapshots/x86_64-linux-tinfo6/100e055fcbdc872df6d2e9216dc3bdffc599d4aee347f7aa31f87b638c06e50b/8.6.5/bin:/home/songzc/.stack/compiler-tools/x86_64-linux-tinfo6/ghc-8.6.5/bin:/home/songzc/.stack/programs/x86_64-linux/ghc-tinfo6-8.6.5/bin:/home/songzc/.local/bin:/home/songzc/.stack/programs/x86_64-linux/ghc-tinfo6-8.4.3/bin:/opt/hisi-linux/x86-arm/arm-hisiv400-linux/target/bin:/opt/hisi-linux/x86-arm/arm-hisiv300-linux/target/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/songzc/luactb-1.0.2:/home/songzc/.gem/ruby/2.7.0/bin
PWD=/home/songzc/open_source/gitit
SHELL=/usr/bin/zsh
SHLVL=1
STACK_EXE=/usr/local/bin/stack
TERM=rxvt-unicode-256color
USER=songzc
WINDOWID=100663306
XAUTHORITY=/home/songzc/.Xauthority
XDG_RUNTIME_DIR=/run/user/1000
XDG_SEAT=seat0
XDG_SESSION_CLASS=user
XDG_SESSION_ID=1
XDG_SESSION_TYPE=x11
XDG_VTNR=7
XMODIFIERS=@im=ibus
ZSH=/home/songzc/.oh-my-zsh
_=/usr/local/bin/stack
monitor_num=2
screen1_width=0:

